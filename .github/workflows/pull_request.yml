name: Pull Request

on: pull_request

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
     
    - uses: actions/checkout@v3

    - name: Check License Lines
      uses: kt3k/license_checker@v1.0.6
    
    - name: Build
      run: dotnet build Mindbox.I18n.sln --configuration Release
      
    - name: Test
      run: dotnet test Mindbox.I18n.sln --no-build --configuration Release --collect:"XPlat Code Coverage" --logger trx --results-directory coverage

    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.1.9
      with: 
        reports: coverage/*/coverage.cobertura.xml
        targetdir: coveragereport
        reporttypes: 'Cobertura'
        verbosity: 'verbose'
        
    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coveragereport/*.xml
        badge: true
        format: 'markdown'
        output: 'both'
        fail_below_min: false
        thresholds: '50 80'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        recreate: true
        path: code-coverage-results.md
        
  check_version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Detect Changes in Mindbox.I18n.Abstractions
        id: dir_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "Mindbox.I18n.Abstractions"
          then
            echo "::set-output name=changed::true"
          else
            echo "::set-output name=changed::false"
          fi

      - name: Get MajorVersion Value
        id: xml
        run: |
          echo "::set-output name=value::$(xmllint --xpath 'string(/Project/PropertyGroup/VersionMajor)' Directory.Build.Props)"

      - name: Detect Changes MajorVersion
        id: xml_changes
        run: |
          if git diff HEAD^ HEAD -- "Directory.Build.Props" | grep -q "${{ steps.xml.outputs.value }}"
          then
          echo "::set-output name=changed::true"
          else
          echo "::set-output name=changed::false"
          fi
        
      - name: If Mindbox.I18n.Abstractions changed, check MajorVersion
        if: steps.dir_changes.outputs.changed == 'true'
        run: |
          if [[ "${{ steps.xml_changes.outputs.changed }}" == "false" ]]
          then
            echo "Error: Mindbox.I18n.Abstractions was changed but MajorVersion was not" >&2
            exit 1
          else
            echo "Both Mindbox.I18n.Abstractions and MajorVersion were changed"
          fi    